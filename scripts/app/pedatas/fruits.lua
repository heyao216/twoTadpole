-- This file is for use with quick-cocos2d-x framework
-- https://github.com/dualface/quick-cocos2d-x
-- bugFixed by ChildhoodAndy on 2014/02/01
-- This file is automatically generated with PhysicsEdtior (http://physicseditor.de). Do not edit
--
-- Usage example:
--			local scaleFactor = 1.0
--			local physicsData = require("shapedefs").physicsData(scaleFactor)
--			local shape = display.newSprite("objectname.png")
--          physics.bindBody(shape, physicsData:get("objectname"))
--

-- copy needed functions to local scope
local pairs = pairs
local ipairs = ipairs

local M = {}

function M.physicsData(scale)
    local physics = {data = {}}

    

    physics.data["fish_head"] = {
        anchorpoint = { 0.50000,0.50000 },
        shapes = {
            
            {
                mass = 0.1,
                elasticity = 0,
                friction = 0,
                surface_velocity = { 0.00000,0.00000 },
                layers = 0,
                group = 0,
                collision_type = 2,
                isSensor = false,
                shape_type = "POLYGON",
                
                polygons = {
                    
                    {14.50000, 2.00000, 12.50000, -33.00000, 3.50000, -40.00000, -6.50000, -38.00000, -12.50000, -25.00000, -12.50000, 0.00000, -0.50000, 48.00000, },
                    
                }
                
            },
            
        },
    }

    

    physics.data["goldFish"] = {
        anchorpoint = { 0.50000,0.50000 },
        shapes = {
            
            {
                mass = 2,
                elasticity = 0,
                friction = 0,
                surface_velocity = { 0.00000,0.00000 },
                layers = 0,
                group = 0,
                collision_type = 1,
                isSensor = false,
                shape_type = "POLYGON",
                
                polygons = {
                    
                    {8.00000, 15.00000, 9.00000, -12.00000, -22.00000, -13.00000, -10.00000, 18.00000, 1.75000, 28.75000, },
                    
                    {9.00000, -12.00000, 8.00000, 15.00000, 22.00000, -1.00000, 19.00000, -10.00000, },
                    
                    {-30.00000, 9.00000, -22.00000, -13.00000, -39.25000, -3.00000, -39.00000, 5.00000, },
                    
                    {-10.00000, 18.00000, -22.00000, -13.00000, -30.00000, 9.00000, },
                    
                    {22.00000, -1.00000, 8.00000, 15.00000, 40.00000, -5.00000, },
                    
                }
                
            },
            
        },
    }

    

    physics.data["octopus"] = {
        anchorpoint = { 0.50000,0.50000 },
        shapes = {
            
            {
                mass = 2,
                elasticity = 0,
                friction = 0,
                surface_velocity = { 0.00000,0.00000 },
                layers = 0,
                group = 0,
                collision_type = 1,
                isSensor = false,
                shape_type = "POLYGON",
                
                polygons = {
                    
                    {-35.00000, 26.00000, 12.00000, 30.00000, 38.00000, -18.00000, 30.00000, -27.00000, -5.00000, -35.00000, -39.00000, -25.00000, },
                    
                    {38.00000, -18.00000, 12.00000, 30.00000, 29.00000, 22.00000, 41.00000, 2.00000, },
                    
                    {4.00000, 37.00000, 12.00000, 30.00000, -16.00000, 28.00000, -4.00000, 38.00000, },
                    
                }
                
            },
            
        },
    }

    

    physics.data["starFish"] = {
        anchorpoint = { 0.50000,0.50000 },
        shapes = {
            
            {
                mass = 2,
                elasticity = 0,
                friction = 0,
                surface_velocity = { 0.00000,0.00000 },
                layers = 0,
                group = 0,
                collision_type = 3,
                isSensor = false,
                shape_type = "POLYGON",
                
                polygons = {
                    
                    {-31.00000, 8.00000, -1.00000, 34.00000, 32.00000, 9.00000, 16.00000, -27.00000, -22.00000, -28.00000, },
                    
                }
                
            },
            
        },
    }

    

    physics.data["turtle"] = {
        anchorpoint = { 0.50000,0.50000 },
        shapes = {
            
            {
                mass = 2,
                elasticity = 0,
                friction = 0,
                surface_velocity = { 0.00000,0.00000 },
                layers = 0,
                group = 0,
                collision_type = 1,
                isSensor = false,
                shape_type = "POLYGON",
                
                polygons = {
                    
                    {-43.00000, 28.50000, -28.00000, 26.50000, -34.00000, 17.50000, -45.00000, 17.50000, },
                    
                    {16.00000, 28.50000, -24.00000, 29.50000, 24.00000, 40.50000, 26.00000, 31.50000, },
                    
                    {24.00000, -16.50000, 9.00000, -28.50000, -25.00000, -11.50000, -32.00000, 9.50000, -28.00000, 26.50000, -24.00000, 29.50000, 22.00000, 19.50000, 34.00000, 0.50000, },
                    
                    {-24.00000, 46.50000, -13.00000, 36.50000, -24.00000, 29.50000, -31.00000, 44.50000, },
                    
                    {-25.00000, -11.50000, 9.00000, -28.50000, -14.00000, -26.50000, },
                    
                    {-28.00000, 26.50000, -32.00000, 9.50000, -34.00000, 17.50000, },
                    
                    {2.00000, 35.50000, -24.00000, 29.50000, -13.00000, 36.50000, },
                    
                    {22.00000, 19.50000, -24.00000, 29.50000, 16.00000, 28.50000, },
                    
                }
                
            },
            
        },
    }

    

    physics.data["yellowFish"] = {
        anchorpoint = { 0.50000,0.50000 },
        shapes = {
            
            {
                mass = 2,
                elasticity = 0,
                friction = 0,
                surface_velocity = { 0.00000,0.00000 },
                layers = 0,
                group = 0,
                collision_type = 1,
                isSensor = false,
                shape_type = "POLYGON",
                
                polygons = {
                    
                    {-25.50000, 14.50000, -22.50000, -1.50000, -48.50000, 11.50000, -43.50000, 20.50000, },
                    
                    {-9.50000, 12.50000, -19.50000, -12.50000, -22.50000, -1.50000, -25.50000, 14.50000, },
                    
                    {42.50000, -13.50000, 22.50000, -20.50000, -19.50000, -12.50000, -9.50000, 12.50000, 13.50000, 25.50000, 33.83334, 22.16667, 49.50000, 2.50000, },
                    
                }
                
            },
            
        },
    }

    

    -- apply scale factor
    local s = scale or 1.0
    for bi, body in pairs(physics.data) do
        for fi, shape in ipairs(body.shapes) do
            if shape.polygons then
                for ci, coordinate in ipairs(shape.polygons) do
                    for i, point in ipairs(coordinate) do
                        point = s * point
                    end
                end

            else
                shape.radius = s * shape.radius
            end
        end
    end

    function physics:get(name)
        return self.data[name]
    end

    return physics
end

return M
